import "dotenv/config";
// dotenv.config();
import express from "express";
import mongoose from "mongoose";
import cors from "cors";
import authRoute from "./routers/auth.route.js";
import billRoute from "./routers/bill.route.js";
import tenantRoute from "./routers/tenant.route.js"; // import th√™m route tenant
import contractRoute from "./routers/contract.route.js"; // import th√™m route contract
import logRoute from "./routers/log.route.js"; // import th√™m route log
import roomRoute from "./routers/room.route.js";
import {
  errorHandler,
  notFound,
  requestLogger,
} from "./middleware/error.middleware.js";
import payRouter from "./routers/payment.route.js";

const app = express();

// Middleware logging request
app.use(requestLogger);

// Cho ph√©p CORS (frontend g·ªçi ƒë∆∞·ª£c)
app.use(cors());

// Ph√¢n t√≠ch d·ªØ li·ªáu JSON v√† form
app.use(express.json({ limit: "10mb" }));
app.use(express.urlencoded({ extended: true, limit: "10mb" }));
app.use("/api/payment", payRouter);
// ƒêƒÉng k√Ω route
app.use("/api", authRoute);
app.use("/api", tenantRoute);
app.use("/api", billRoute);
app.use("/api", contractRoute);
app.use("/api", roomRoute);
app.use("/api", logRoute);


// Middleware x·ª≠ l√Ω route kh√¥ng t·ªìn t·∫°i
app.use(notFound);

// Middleware x·ª≠ l√Ω l·ªói chung
app.use(errorHandler);

// K·∫øt n·ªëi MongoDB
mongoose
  .connect(process.env.MONGO_URI)
  .then(() => {
    console.log("‚úÖ K·∫øt n·ªëi MongoDB th√†nh c√¥ng");
    const PORT = process.env.PORT || 3000;
    app.listen(PORT, () => {
      console.log(`üöÄ Server ƒëang ch·∫°y t·∫°i http://localhost:${PORT}`);
    });
  })
  .catch((err) => {
    console.error("‚ùå L·ªói k·∫øt n·ªëi MongoDB:", err);
  });
